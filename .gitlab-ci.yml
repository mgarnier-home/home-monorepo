# stages:
#   - install dependencies
#   - build
#   - package

# image: node:18

# before_script:
#   - corepack enable
#   - corepack prepare pnpm@latest-8 --activate
#   - pnpm config set store-dir .pnpm-store

# cache:
#   key:
#     files:
#       - pnpm-lock.yaml
#   paths:
#     - .pnpm-store/

# build dashboard:
#   stage: build
#   script:
#     - pnpm install --frozen-lockfile
#     - npx nx build dashboard
#   artifacts:
#     paths:
#       - apps/dashboard/app-dist
#       - apps/dashboard/server-dist
#     expire_in: 1 week

# package dashboard:
#   stage: package
#   image: docker:20
#   before_script:
#     - docker login -u mgarnier11 -p $DOCKER_HUB_TOKEN
#     - docker buildx create --use
#   services:
#     - docker:20-dind
#   variables:
#     DOCKER_HOST: tcp://docker:2375
#     DOCKER_TLS_CERTDIR: ''
#     DOCKER_DRIVER: overlay2
#   script:
#     - docker buildx build --platform linux/amd64,linux/arm64 -t mgarnier11/dashboard -f apps/dashboard/docker/package.Dockerfile . --push

image: docker:20

include:
  - 'apps/dashboard/.gitlab-ci.yml'
  - 'libs/**/.gitlab-ci.yml'

stages:
  - install dependencies
  - build

before_script:
  - docker login -u mgarnier11 -p $DOCKER_HUB_TOKEN
  - docker buildx create --use
services:
  - name: docker:dind
    alias: docker
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  # DOCKER_DRIVER: overlay2

install dependencies amd64:
  stage: install dependencies
  script:
    - docker buildx build --platform linux/amd64 -t mgarnier11/my-home:deps -f docker/deps.Dockerfile . --push
    - docker buildx build --platform linux/amd64 -t mgarnier11/my-home:libs -f docker/libs.Dockerfile . --push

install dependencies arm64:
  stage: install dependencies
  tags:
    - arm64
  script:
    - docker buildx build --platform linux/arm64/v8 -t mgarnier11/my-home:deps -f docker/deps.Dockerfile . --push
    - docker buildx build --platform linux/arm64/v8 -t mgarnier11/my-home:libs -f docker/libs.Dockerfile . --push

  # rules:
  #   - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
  #     changes:
  #       - 'docker/**'
  #       - '**/package.json'
  #       - 'pnpm-lock.yaml'
  #       - 'libs/**/*'
