#region templates

.rules-template: &rules-template
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - apps/$PROJECT_NAME/**/*

.build-template: &build-template
  stage: build apps
  script:
    - docker build -t mgarnier11/$PROJECT_NAME:$TAG_NAME -f apps/$PROJECT_NAME/docker/Dockerfile . --push
  <<: *rules-template

.manifest-template: &manifest-template
  stage: manifest apps
  script:
    - docker manifest create mgarnier11/$PROJECT_NAME mgarnier11/$PROJECT_NAME:amd64 mgarnier11/$PROJECT_NAME:arm64
    - docker manifest push mgarnier11/$PROJECT_NAME
  <<: *rules-template

.rules-deps: &rules-deps-template
  rules:
    - if: '$CI_COMMIT_BRANCH == "master" && $CI_PIPELINE_SOURCE == "push"'
      changes:
        - 'docker/**'
        - '**/package.json'
        - '**/.gitlab-ci.yml'
        - 'pnpm-lock.yaml'

.install-deps-template: &install-deps-template
  stage: install dependencies
  script:
    - docker build -t mgarnier11/my-home:$TAG_NAME -f docker/Dockerfile . --push
  <<: *rules-deps-template

#endregion

image: docker:24.0.7

include:
  - 'apps/**/.gitlab-ci.yml'
  - 'libs/**/.gitlab-ci.yml'

stages:
  - install dependencies
  - build apps
  - manifest apps

before_script:
  - docker login -u mgarnier11 -p $DOCKER_HUB_TOKEN
  - docker buildx create --use
services:
  - docker:24.0.7-dind
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''

install dependencies amd64:
  extends: .install-deps-template
  variables:
    TAG_NAME: amd64

install dependencies arm64:
  extends: .install-deps-template
  tags:
    - arm64
  variables:
    TAG_NAME: arm64
