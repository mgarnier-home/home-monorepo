name: "Build and publish app"
run-name: "Build and publish ${{ inputs.app-to-publish }}"

on:
  workflow_call:
    inputs:
      app-to-publish:
        description: "The name of the application to publish"
        required: true
        type: string
      version-upgrade:
        description: "How to upgrade the version"
        required: true
        type: string

jobs:
  get-version:
    runs-on: ubuntu-latest
    name: Get version
    outputs:
      new-app-version: ${{ steps.increment-version.outputs.new-version }}
    steps:
      - name: Get versions of app from docker hub
        uses: mgarnier11/gh-actions/get-docker-versions@latest
        id: get-docker-versions
        with:
          api-url: https://hub.docker.com/v2/repositories
          image-author: mgarnier11
          image-name: ${{ inputs.app-to-publish }}
      - name: Increment the version
        uses: mgarnier11/gh-actions/increment-version@latest
        id: increment-version
        with:
          version: ${{ steps.get-docker-versions.outputs.latest-version }}
          upgrade: ${{ inputs.version-upgrade }}
  build:
    runs-on: linux/${{ matrix.platform }}
    needs: get-version
    name: Build ${{ needs.get-version.outputs.new-app-version }} on ${{ matrix.platform }}
    strategy:
      matrix:
        platform:
          - amd64
          - arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build application
        shell: bash
        run: bash build-app.sh --name ${{ inputs.app-to-publish }} --version ${{ needs.get-version.outputs.new-app-version }} --tag ${{ matrix.platform }}
      - name: Push application runtime
        shell: bash
        run: docker push mgarnier11/${{ inputs.app-to-publish }}:${{ matrix.platform }}
      # - name: Build app for ${{ matrix.platform }}
      #   uses: ./.github/actions/build
      #   with:
      #     app-name: ${{ inputs.app-to-publish }}
      #     version: ${{ needs.get-version.outputs.new-app-version }}
      #     platform: ${{ matrix.platform }}
      #     dockerhub-username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     dockerhub-token: ${{ secrets.DOCKERHUB_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs:
      - get-version
      - build
    name: Publish ${{ needs.get-version.outputs.new-app-version }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish version ${{ needs.get-version.outputs.new-app-version }} for ${{ inputs.app-to-publish }}
        run: >
          docker buildx imagetools create
          --tag mgarnier11/${{ inputs.app-to-publish }}:latest
          --tag mgarnier11/${{ inputs.app-to-publish }}:${{ needs.get-version.outputs.new-app-version }}
          mgarnier11/${{ inputs.app-to-publish }}:amd64
          mgarnier11/${{ inputs.app-to-publish }}:arm64
